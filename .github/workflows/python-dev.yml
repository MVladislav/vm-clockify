name: Python DEV CI

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

on:
  push:
    branches:
      - main
  pull_request:

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

env:
  DEFAULT_PYTHON: "3.11"

  GIT_BRANCH_NAME: "${{ github.ref }}"
  GIT_REPOSITORY_NAME: "${{ github.event.repository.name }}"

  PROJECT_NAME: vm-clockify
  VERSION: 1.1.0
  LOGGING_LEVEL: "${{ contains(github.ref, 'main') && 'INFO' || 'DEBUG' }}"
  LOGGING_VERBOSE: "${{ contains(github.ref, 'main') && 2 || 3 }}"
  VM_BASE_PATH: /tmp

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # BUILD
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: install dependencies
        run: |
          python3 -m pip install --upgrade pip

      - name: build binary wheel and a source tarball
        run: python3 setup.py sdist

      - name: archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PROJECT_NAME }}
          path: dist

  # DEPLOY
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  deploy:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Download artifact from build step
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.PROJECT_NAME }}
          path: artifacts

      - name: un-tar final result
        run: |
          tar xvf vm_clockify-*.tar.gz
        working-directory: artifacts

      - name: install final result
        run: |
          cd artifacts/vm_clockify-*
          pip3 install .
